1) MotivationCollege Basketball garners the interest of viewers across the country. This interest intensifies each year in March when the Champion is crowned in a 68-team bracket style tournament. This single elimination tournament is known as “March Madness”. Each year millions of Americans cast their predictions for how the bracket will play out. In an attempt to better understand this tournament and college basketball as a whole. I have analyzed College Basketball data. My analysis seeks to address three main questions: •	1) Which in-game statistic is the best predictor of team wins?o	Distributional Analyses, Correlational Analysis, and Linear Regression•	2) Is there a group of influential points when predicting team wins?o	Outlier Detection•	3) Do certain clusters of teams that perform significantly better than other clusters? How many clusters are optimal?o	Clustering•	4) What are the most important features for classifying a team as Qualified/Not Qualified? How accurately can we classify teams?o	Classification (Random Forest)2) Data Source	To address these research questions, I used a dataset from Sports Reference: http://www.sports-reference.com/cbb/seasons/2017-school-stats.html. This dataset features season long statistics for 351 NCAA division 1 basketball teams. Upon import this data was in a .txt file with a numbered index, to streamline my analysis I reset the index as the name of the team. Additionally I dropped unnecessary columns that detailed a team’s performance within their conference, because this information was already represented through a team’s aggregate total. I also divided in-game statistics by the number of games that team had played to get the statistics on a per-game basis. After these transformations, the data included the following:•	School: String (index)		• FT: numpy.float64	•	G: numpy.int64			•FTA: numpy.float64•	W: numpy.int64			•FT%: numpy.float64•	L: numpy.int64			•ORB: numpy.float64•	W-L%: numpy.float64		•TRB: numpy.float64•	SRS: numpy.float64			•AST: numpy.float64•	SOS: numpy.float64			•STL: numpy.float64•	Total Points: numpy.float64	•BLK: numpy.float64•	Opponent Points: numpy.float64	•TOV: numpy.float64•	FG: numpy.float64			•PF: numpy.float64•	FGA: numpy.float64			•3P%: numpy.float64•	FG%: numpy.float64